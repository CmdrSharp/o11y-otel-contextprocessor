extensions:
  health_check:
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679
  headers_setter:
    headers:
      - action: upsert
        key: X-Scope-OrgId
        from_context: tenant
  http_forwarder:
    ingress:
      endpoint: "0.0.0.0:8081"
    egress:
      endpoint: http://http-server:80
      headers:
        my-header: otel-forwarder
      timeout: 5s

receivers:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 30s
          static_configs:
            - targets: ['0.0.0.0:8888']

  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  groupbyattrs/tenant:
    keys: [service.name]

  # service.name comes from the resource attribute from prometheus metrics
  context/tenant:
    actions:
    - action: insert
      key: tenant
      value: anonymous
      from_attribute: service.name

exporters:
  debug:
    verbosity: detailed

  otlphttp:
    endpoint: http://http-server:1080
    compression: none
    auth:
      authenticator: headers_setter

  prometheusremotewrite:
    endpoint: http://http-server:1080
    resource_to_telemetry_conversion:
      enabled: true
    auth:
      authenticator: headers_setter

service:
  telemetry:
    logs:
      level: "info"
  pipelines:
    metrics:
      receivers: [prometheus]
      processors: [context/tenant]
      exporters: [otlphttp]
  extensions: 
  - health_check
  - pprof
  - zpages
  - headers_setter
